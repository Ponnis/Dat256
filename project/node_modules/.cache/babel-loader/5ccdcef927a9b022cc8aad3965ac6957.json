{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\src\\\\checkout\\\\MasterForm.js\";\nimport React from 'react';\nimport CreditCard from './CreditCard';\nimport './MasterForm.css';\nimport { addOrder as _addOrder } from \"../farmerInformation/Farmers\";\n\nvar MasterForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(MasterForm, _React$Component);\n\n  function MasterForm(props) {\n    var _this;\n\n    _classCallCheck(this, MasterForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MasterForm).call(this, props)); // Set the initial input values\n\n    _this.handleSubmit = function (event) {\n      event.preventDefault();\n      var _this$state = _this.state,\n          email = _this$state.email,\n          name = _this$state.name,\n          address = _this$state.address;\n      var msg = \"Du har inte fyllt i följande korrekt: \"; //Error handlers for the fill in form, sends an alert based on what you filled in incorrectly.\n\n      if (email.length <= 0 || !email.includes(\"@\") || !email.includes(\".\") || name.length <= 0 || address.length <= 0) {\n        if (email.length <= 0 || !email.includes(\"@\") || !email.includes(\".\")) {\n          msg = msg.concat(\"Email\");\n        }\n\n        if (name.length <= 0) {\n          msg = msg.concat(\" Namn\");\n        }\n\n        if (address.length <= 0) {\n          msg = msg.concat(\" Adress\");\n        }\n\n        alert(msg);\n      } else {\n        //Else sends you a confirmation of the purchase and to where it will be ordered\n        alert(\"Din order levereras till n\\xE4rmsta utl\\xE4mningsst\\xE4lle n\\xE4ra: \".concat(address, \", via v\\xE5ra klimatsmarta lastbilar och planerade rutter,\\n \\n      Till namnet:  \").concat(name, \" \\n\\n      Med kontaktemail:  \").concat(email, \"\\n\\n      Tack f\\xF6r ditt k\\xF6p!\"));\n\n        _this.clickedOk();\n\n        _this.addOrder(_this.props.products.products);\n      }\n    };\n\n    _this.state = {\n      currentStep: 1,\n      // Default is Step 1\n      email: '',\n      name: '',\n      address: '' // Bind the submission to handleChange() \n\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._next = _this._next.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this._prev = _this._prev.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  } // Use the submitted data to set the state\n\n\n  _createClass(MasterForm, [{\n    key: \"handleChange\",\n    value: function handleChange(event) {\n      var _event$target = event.target,\n          name = _event$target.name,\n          value = _event$target.value;\n      this.setState(_defineProperty({}, name, value));\n    }\n  }, {\n    key: \"_next\",\n    value: function _next() {\n      if (this.checkInformation()) {\n        return null;\n      } else {\n        var currentStep = this.state.currentStep; // If the current step is 1 or 2, then add one on \"next\" button click\n\n        if (currentStep >= 1 && currentStep <= 4) {\n          currentStep = currentStep + 1;\n        } //currentStep = currentStep >= 2? 3: currentStep + 1\n\n\n        this.setState({\n          currentStep: currentStep\n        });\n      }\n    }\n  }, {\n    key: \"_prev\",\n    value: function _prev() {\n      var currentStep = this.state.currentStep; // If the current step is 2 or 3, then subtract one on \"previous\" button click\n\n      currentStep = currentStep <= 1 ? 1 : currentStep - 1;\n      this.setState({\n        currentStep: currentStep\n      });\n    }\n  }, {\n    key: \"checkInformation\",\n    //Checks the information entered in the text fields\n    value: function checkInformation() {\n      var _this$state2 = this.state,\n          email = _this$state2.email,\n          name = _this$state2.name,\n          address = _this$state2.address,\n          currentStep = _this$state2.currentStep; //Checks everything regarding email\n\n      if (currentStep === 1) {\n        //No email entered \n        if (email.length <= 0) {\n          alert(\"Du har inte fyllt i en epostadress.\");\n          return true;\n        } //Email not containing @ or .\n        else if (!email.includes(\"@\") || !email.includes(\".\")) {\n            alert(\"Din epostadress är inte korrekt ifylld.\");\n            return true;\n          }\n      } //Checks everything in step 2 (name)\n      else if (currentStep === 2) {\n          //Name not entered\n          if (name.length <= 0) {\n            alert(\"Du har inte fyllt i ditt namn.\");\n            return true;\n          }\n        } //Checks everything in step 3 (address)\n        else if (currentStep === 3) {\n            //Address not entered\n            if (address.length <= 0) {\n              alert(\"Du har inte fyllt i ditt namn.\");\n              return true;\n            }\n          } //The information is entered correctly\n          else {\n              return false;\n            }\n    } // Trigger an alert on form submission\n\n  }, {\n    key: \"clickedOk\",\n    value: function clickedOk() {\n      this.props.search(\"search\");\n    }\n  }, {\n    key: \"addOrder\",\n    value: function addOrder(products) {\n      products.forEach(function (product) {\n        _addOrder(product);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //All products in the shopping cart\n      var products = this.props.products.products;\n      console.log(JSON.stringify(products)); //Information about all products in the shopping cart\n\n      var divs = products.map(function (product) {\n        return React.createElement(\"div\", {\n          className: \"CartInformation\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 180\n          },\n          __self: this\n        }, product.quantity, \" st \", product.name, \" (\", product.price, \" kr/st)\");\n      }); //Information about the total cost\n\n      var total = React.createElement(\"div\", {\n        className: \"TotalInformation\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 182\n        },\n        __self: this\n      }, \"Totalpris: \", this.props.products.total.totalPrice, \" kr\");\n      return React.createElement(\"div\", {\n        className: \"PageWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"CheckoutLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"Betalning\"), React.createElement(\"div\", {\n        className: \"StepLabel\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Steg \", this.state.currentStep, \" \"), React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 190\n        },\n        __self: this\n      }, React.createElement(Step1, {\n        currentStep: this.state.currentStep,\n        handleChange: this.handleChange,\n        email: this.state.email,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }), React.createElement(Step2, {\n        currentStep: this.state.currentStep,\n        handleChange: this.handleChange,\n        name: this.state.name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(Step3, {\n        currentStep: this.state.currentStep,\n        handleChange: this.handleChange,\n        address: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }), React.createElement(Step4, {\n        currentStep: this.state.currentStep,\n        handleChange: this.handleChange,\n        address: this.state.address,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }), this.previousButton, this.nextButton, this.checkoutButton)), React.createElement(\"div\", {\n        className: \"InYourCart\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217\n        },\n        __self: this\n      }, \"I din varukorg:\"), divs, total);\n    }\n  }, {\n    key: \"previousButton\",\n    get: function get() {\n      var currentStep = this.state.currentStep; // If the current step is not 1, then render the \"previous\" button\n\n      if (currentStep !== 1) {\n        return React.createElement(\"button\", {\n          className: \"Button\",\n          type: \"SimpleButton\",\n          onClick: this._prev,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"F\\xF6rg\\xE5ende steg\");\n      } // ...else return nothing\n\n\n      return null;\n    } //Shows the checkout button if you're heading to step 4\n\n  }, {\n    key: \"checkoutButton\",\n    get: function get() {\n      var currentStep = this.state.currentStep;\n\n      if (currentStep === 4) {\n        return React.createElement(\"button\", {\n          className: \"Button\",\n          type: \"button\",\n          onClick: this.handleSubmit,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77\n          },\n          __self: this\n        }, \"Slutf\\xF6r k\\xF6p\");\n      }\n\n      return null; //... else render nothing\n    }\n  }, {\n    key: \"nextButton\",\n    get: function get() {\n      var currentStep = this.state.currentStep; // If the current step is not 3, then render the \"next\" button\n\n      if (currentStep < 4) {\n        return React.createElement(\"button\", {\n          className: \"Button\",\n          type: \"button\",\n          onClick: this._next,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 88\n          },\n          __self: this\n        }, \"N\\xE4sta steg\");\n      } // ...else render nothing\n\n\n      return null;\n    }\n  }]);\n\n  return MasterForm;\n}(React.Component); //The first step for filling in your email\n\n\nexport { MasterForm as default };\n\nvar Step1 =\n/*#__PURE__*/\nfunction (_React$Component2) {\n  _inherits(Step1, _React$Component2);\n\n  function Step1() {\n    _classCallCheck(this, Step1);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Step1).apply(this, arguments));\n  }\n\n  _createClass(Step1, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.currentStep !== 1) {\n        // Prop: The current step\n        return null;\n      } // The markup for the Step 1 UI\n\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"InformativeLabel\",\n        htmlFor: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, \"Fyll i din epostaddress\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"TextFieldss\",\n        id: \"email\",\n        name: \"email\",\n        type: \"text\",\n        placeholder: \"Din epostadress\",\n        value: this.props.email // Prop: The email input data\n        ,\n        onChange: this.props.handleChange // Prop: Puts data into state\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Step1;\n}(React.Component); //The 2nd step for filling in your name\n\n\nvar Step2 =\n/*#__PURE__*/\nfunction (_React$Component3) {\n  _inherits(Step2, _React$Component3);\n\n  function Step2() {\n    _classCallCheck(this, Step2);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Step2).apply(this, arguments));\n  }\n\n  _createClass(Step2, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.currentStep !== 2) {\n        // Prop: The current step\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"InformativeLabel\",\n        htmlFor: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262\n        },\n        __self: this\n      }, \"Fyll i ditt namn (F\\xF6r- och efternamn)\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"TextFieldss\",\n        id: \"name\",\n        name: \"name\",\n        type: \"text\",\n        placeholder: \"F\\xF6rnamn Efternamn\",\n        value: this.props.name,\n        onChange: this.props.handleChange // Prop: Puts data into state\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 265\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Step2;\n}(React.Component); //The 3rd step for filling in your address\n\n\nvar Step3 =\n/*#__PURE__*/\nfunction (_React$Component4) {\n  _inherits(Step3, _React$Component4);\n\n  function Step3() {\n    _classCallCheck(this, Step3);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Step3).apply(this, arguments));\n  }\n\n  _createClass(Step3, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.currentStep !== 3) {\n        // Prop: The current step\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 287\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        className: \"InformativeLabel\",\n        htmlFor: \"address\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289\n        },\n        __self: this\n      }, \"Fyll i din adress\")), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"TextFieldss\",\n        id: \"address\",\n        name: \"address\",\n        type: \"text\",\n        placeholder: \"Gatuadress\",\n        value: this.props.address,\n        onChange: this.props.handleChange // Prop: Puts data into state\n        ,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Step3;\n}(React.Component); //The credit card fill-in step, imported from the creditCard class\n\n\nvar Step4 =\n/*#__PURE__*/\nfunction (_React$Component5) {\n  _inherits(Step4, _React$Component5);\n\n  function Step4() {\n    _classCallCheck(this, Step4);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Step4).apply(this, arguments));\n  }\n\n  _createClass(Step4, [{\n    key: \"render\",\n    value: function render() {\n      if (this.props.currentStep !== 4) {\n        // Prop: The current step\n        return null;\n      }\n\n      return React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 314\n        },\n        __self: this\n      }, React.createElement(CreditCard, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 315\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Step4;\n}(React.Component);","map":{"version":3,"sources":["C:\\Users\\sarah\\OneDrive\\Documents\\Dat256\\project\\src\\checkout\\MasterForm.js"],"names":["React","CreditCard","addOrder","MasterForm","props","handleSubmit","event","preventDefault","state","email","name","address","msg","length","includes","concat","alert","clickedOk","products","currentStep","handleChange","bind","_next","_prev","target","value","setState","checkInformation","search","forEach","product","console","log","JSON","stringify","divs","map","quantity","price","total","totalPrice","previousButton","nextButton","checkoutButton","Component","Step1","Step2","Step3","Step4"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport CreditCard from './CreditCard'\r\nimport './MasterForm.css'\r\nimport {addOrder} from \"../farmerInformation/Farmers\"\r\n\r\nexport default class MasterForm extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n    // Set the initial input values\r\n    this.state = {\r\n      currentStep: 1, // Default is Step 1\r\n      email: '',\r\n      name: '',\r\n      address: '', \r\n    }\r\n    // Bind the submission to handleChange() \r\n    this.handleChange = this.handleChange.bind(this)\r\n    this._next = this._next.bind(this)\r\n    this._prev = this._prev.bind(this)\r\n  }\r\n\r\n  // Use the submitted data to set the state\r\n  handleChange(event) {\r\n    const {name, value} = event.target\r\n    this.setState({\r\n      [name]: value\r\n    })    \r\n  }\r\n  \r\n  _next() {\r\n    if (this.checkInformation()){\r\n      return null;\r\n    }\r\n    else{\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 1 or 2, then add one on \"next\" button click\r\n    if(currentStep>=1 && currentStep<=4){\r\n      currentStep= currentStep+1;\r\n    }\r\n    //currentStep = currentStep >= 2? 3: currentStep + 1\r\n    this.setState({\r\n      currentStep: currentStep\r\n    })\r\n  }\r\n  }\r\n    \r\n  _prev() {\r\n    let currentStep = this.state.currentStep\r\n    // If the current step is 2 or 3, then subtract one on \"previous\" button click\r\n    currentStep = currentStep <= 1? 1: currentStep - 1\r\n    this.setState({\r\n      currentStep: currentStep\r\n    })\r\n  }\r\n\r\n  get previousButton(){\r\n    let currentStep = this.state.currentStep;\r\n    // If the current step is not 1, then render the \"previous\" button\r\n    if(currentStep !==1){\r\n      return (\r\n        <button \r\n          className=\"Button\" \r\n          type=\"SimpleButton\" onClick={this._prev}>\r\n          Förgående steg\r\n        </button>\r\n      )\r\n    }\r\n    // ...else return nothing\r\n    return null;\r\n  }\r\n  //Shows the checkout button if you're heading to step 4\r\n  get checkoutButton(){\r\n    let currentStep = this.state.currentStep;\r\n\r\n    if(currentStep === 4){\r\n      return(\r\n        <button className=\"Button\"\r\n        type=\"button\" onClick={this.handleSubmit}>Slutför köp</button>\r\n      )\r\n    }return null; //... else render nothing\r\n  }\r\n  \r\n  get nextButton(){\r\n    let currentStep = this.state.currentStep;\r\n    // If the current step is not 3, then render the \"next\" button\r\n    if(currentStep <4){\r\n      return (\r\n        <button \r\n          className=\"Button\" \r\n          type=\"button\" onClick={this._next}>\r\n          Nästa steg\r\n        </button>        \r\n      )\r\n    }\r\n    // ...else render nothing\r\n    return null;\r\n  }\r\n\r\n  //Checks the information entered in the text fields\r\n  checkInformation(){\r\n      const { email, name, address, currentStep } = this.state\r\n      //Checks everything regarding email\r\n      if(currentStep === 1){\r\n        //No email entered \r\n        if (email.length <= 0){\r\n          alert(\"Du har inte fyllt i en epostadress.\")\r\n          return true;\r\n        }\r\n        //Email not containing @ or .\r\n        else if (!email.includes(\"@\") || !email.includes(\".\")){\r\n          alert(\"Din epostadress är inte korrekt ifylld.\")\r\n          return true;\r\n        }\r\n      }\r\n      //Checks everything in step 2 (name)\r\n      else if(currentStep === 2){\r\n        //Name not entered\r\n        if (name.length <= 0){\r\n          alert(\"Du har inte fyllt i ditt namn.\")\r\n          return true;\r\n        }\r\n      }\r\n      //Checks everything in step 3 (address)\r\n      else if(currentStep === 3){\r\n        //Address not entered\r\n        if (address.length <=0){\r\n          alert(\"Du har inte fyllt i ditt namn.\")\r\n          return true;\r\n        }\r\n      }\r\n      //The information is entered correctly\r\n      else{\r\n        return false;\r\n      }\r\n  }\r\n\r\n  // Trigger an alert on form submission\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n    const { email, name, address} = this.state\r\n    var msg = \"Du har inte fyllt i följande korrekt: \"\r\n    //Error handlers for the fill in form, sends an alert based on what you filled in incorrectly.\r\n    if(email.length<=0||!(email.includes(\"@\"))||!(email.includes(\".\"))||name.length<=0||address.length<=0){\r\n      if(email.length<=0||!(email.includes(\"@\"))||!(email.includes(\".\"))){\r\n       msg= msg.concat(\"Email\")\r\n      }if(name.length<=0){\r\n       msg= msg.concat(\" Namn\")\r\n      }if(address.length<=0){\r\n       msg= msg.concat(\" Adress\")\r\n      }\r\n      alert(msg);\r\n    }else{\r\n      //Else sends you a confirmation of the purchase and to where it will be ordered\r\n      alert(`Din order levereras till närmsta utlämningsställe nära: ${address}, via våra klimatsmarta lastbilar och planerade rutter,\\n \r\n      Till namnet:  ${name} \\n\r\n      Med kontaktemail:  ${email}\\n\r\n      Tack för ditt köp!`)\r\n      this.clickedOk();\r\n      this.addOrder(this.props.products.products);\r\n    }\r\n  }\r\n\r\n  clickedOk(){\r\n    this.props.search(\"search\")\r\n  }\r\n\r\n  addOrder(products){\r\n    products.forEach(product =>{\r\n            addOrder(product)\r\n      }\r\n    )\r\n  }\r\n  \r\n  render() { \r\n       \r\n    //All products in the shopping cart\r\n    let products = this.props.products.products;\r\n    console.log(JSON.stringify(products))\r\n    //Information about all products in the shopping cart\r\n    let divs = products.map((product)=><div className={\"CartInformation\"}>{product.quantity} st {product.name} ({product.price} kr/st)</div>);\r\n    //Information about the total cost\r\n    let total = <div className={\"TotalInformation\"}>Totalpris: {this.props.products.total.totalPrice} kr</div>;\r\n\r\n    return (\r\n      <div className=\"PageWrapper\">\r\n        <React.Fragment>\r\n        <div className=\"CheckoutLabel\">Betalning</div>\r\n        <div className=\"StepLabel\">Steg {this.state.currentStep} </div> \r\n        \r\n        <form onSubmit={this.handleSubmit}>\r\n        \r\n        <Step1 \r\n          currentStep={this.state.currentStep} \r\n          handleChange={this.handleChange}\r\n          email={this.state.email}\r\n        />\r\n        <Step2 \r\n          currentStep={this.state.currentStep} \r\n          handleChange={this.handleChange}\r\n          name={this.state.name}\r\n        />\r\n        <Step3 \r\n          currentStep={this.state.currentStep} \r\n          handleChange={this.handleChange}\r\n          address={this.state.address}\r\n        />\r\n        <Step4 \r\n          currentStep={this.state.currentStep} \r\n          handleChange={this.handleChange}\r\n          address={this.state.address}\r\n        />\r\n        {this.previousButton}\r\n        {this.nextButton}\r\n        {this.checkoutButton}\r\n      </form>\r\n      </React.Fragment>\r\n        <div className=\"InYourCart\">I din varukorg:</div>\r\n            {divs}\r\n            {total}\r\n\r\n        </div>\r\n    )\r\n    }\r\n}\r\n\r\n//The first step for filling in your email\r\nclass Step1 extends React.Component {\r\n  render() {\r\n    if (this.props.currentStep !== 1) { // Prop: The current step\r\n      return null\r\n    }\r\n    // The markup for the Step 1 UI\r\n    return(\r\n      <div>\r\n        <div>\r\n          <label className=\"InformativeLabel\" htmlFor=\"email\">Fyll i din epostaddress</label>\r\n        </div>\r\n        <div>\r\n          <input\r\n          className={\"TextFieldss\"}\r\n          id=\"email\"\r\n          name=\"email\"\r\n          type=\"text\"\r\n          placeholder=\"Din epostadress\"\r\n          value={this.props.email} // Prop: The email input data\r\n          onChange={this.props.handleChange} // Prop: Puts data into state\r\n          />\r\n        </div>\r\n      </div> \r\n    )\r\n  }\r\n}\r\n//The 2nd step for filling in your name\r\nclass Step2 extends React.Component {\r\n  render() {\r\n    if (this.props.currentStep !== 2) { // Prop: The current step\r\n      return null\r\n    }\r\n    return(\r\n      <div>\r\n        <div>\r\n          <label className=\"InformativeLabel\" htmlFor=\"name\">Fyll i ditt namn (För- och efternamn)</label>\r\n        </div>\r\n        <div>\r\n          <input\r\n            className=\"TextFieldss\"\r\n            id=\"name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            placeholder=\"Förnamn Efternamn\"\r\n            value={this.props.name} \r\n            onChange={this.props.handleChange} // Prop: Puts data into state\r\n            />\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n//The 3rd step for filling in your address\r\nclass Step3 extends React.Component {\r\n  render() {\r\n    if (this.props.currentStep !== 3) { // Prop: The current step\r\n      return null\r\n    }\r\n    \r\n    return(\r\n      <div >\r\n        <div>\r\n          <label className=\"InformativeLabel\" htmlFor=\"address\">Fyll i din adress</label>\r\n        </div>\r\n        <div>\r\n        <input\r\n            className=\"TextFieldss\"\r\n            id=\"address\"\r\n            name=\"address\"\r\n            type=\"text\"\r\n            placeholder=\"Gatuadress\"\r\n            value={this.props.address} \r\n            onChange={this.props.handleChange} // Prop: Puts data into state\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n//The credit card fill-in step, imported from the creditCard class\r\nclass Step4 extends React.Component {\r\n  render() {\r\n    if (this.props.currentStep !== 4) { // Prop: The current step\r\n      return null\r\n    }\r\n    \r\n    return(\r\n      <div className=\"form-group\">\r\n       <CreditCard></CreditCard>\r\n       \r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}