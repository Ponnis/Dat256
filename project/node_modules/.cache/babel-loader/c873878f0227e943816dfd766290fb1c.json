{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\sarah\\\\OneDrive\\\\Documents\\\\Dat256\\\\project\\\\src\\\\login\\\\Login.js\";\nimport React from 'react';\nimport LoginView from './LoginView';\nimport './TextInputStyle.css';\nimport { checkLogin } from \"../AccountPage/TestAccounts\";\n\nvar Login =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Login, _React$Component);\n\n  function Login() {\n    var _this;\n\n    _classCallCheck(this, Login);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Login).call(this)); //Default values\n\n    _this.handleChange = function (id, value) {\n      switch (id) {\n        case \"username\":\n          _this.setState({\n            username: value\n          });\n\n          break;\n\n        case \"password\":\n          _this.setState({\n            password: value\n          });\n\n          break;\n\n        default:\n          break;\n      }\n    };\n\n    _this.tryToLogin = function () {\n      if (checkLogin(_this.state.username, _this.state.password)) {\n        _this.setState({\n          loggedIn: true\n        });\n\n        _this.props.search(\"producer\", _this.state.username);\n      } else {//alert(\"Användarnamn eller lösenord är fel\")\n      }\n    };\n\n    _this.loggOut = function () {\n      _this.setState({\n        loggedIn: false\n      });\n    };\n\n    _this.state = {\n      username: \"\",\n      password: \"\",\n      textValue: 'Logga in',\n      loggedIn: false\n    };\n    return _this;\n  } //Sets the user name and password to the field values\n\n\n  _createClass(Login, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"LeftBox\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Fyll i dina anv\\xE4ndaruppgifter!\"), this.usernameField, this.passwordField, this.logoutButton, this.loginButton);\n    }\n  }, {\n    key: \"logoutButton\",\n    //Renders the logout button if the user is logged in\n    get: function get() {\n      if (this.state.loggedIn) {\n        return React.createElement(\"button\", {\n          className: \"button\",\n          onClick: this.loggOut,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56\n          },\n          __self: this\n        }, \"Logga ut\");\n      }\n\n      return null;\n    } //Renders the login button if the user is logged out\n\n  }, {\n    key: \"loginButton\",\n    get: function get() {\n      if (!this.state.loggedIn) {\n        return React.createElement(\"button\", {\n          className: \"SignInButton\",\n          onClick: this.tryToLogin,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 65\n          },\n          __self: this\n        }, \"Logga in\");\n      }\n\n      return null;\n    } //Renders the username field if the user is logged out\n\n  }, {\n    key: \"usernameField\",\n    get: function get() {\n      if (!this.state.loggedIn) {\n        return React.createElement(LoginView, {\n          label: \"Användarnamn\",\n          id: \"username\",\n          handleChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    } //Renders the password field if the user is logged out\n\n  }, {\n    key: \"passwordField\",\n    get: function get() {\n      if (!this.state.loggedIn) {\n        return React.createElement(LoginView, {\n          label: \"Lösenord\",\n          id: \"password\",\n          handleChange: this.handleChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83\n          },\n          __self: this\n        });\n      }\n\n      return null;\n    }\n  }]);\n\n  return Login;\n}(React.Component);\n\nexport default Login;","map":{"version":3,"sources":["C:\\Users\\sarah\\OneDrive\\Documents\\Dat256\\project\\src\\login\\Login.js"],"names":["React","LoginView","checkLogin","Login","handleChange","id","value","setState","username","password","tryToLogin","state","loggedIn","props","search","loggOut","textValue","usernameField","passwordField","logoutButton","loginButton","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAO,sBAAP;AACA,SAASC,UAAT,QAA2B,6BAA3B;;IAEMC,K;;;;;AACF,mBAAc;AAAA;;AAAA;;AACV,gFADU,CAEV;;AAFU,UAUdC,YAVc,GAUD,UAACC,EAAD,EAAIC,KAAJ,EAAY;AACrB,cAAQD,EAAR;AACI,aAAI,UAAJ;AACI,gBAAKE,QAAL,CAAc;AACVC,YAAAA,QAAQ,EAAEF;AADA,WAAd;;AAGA;;AACJ,aAAI,UAAJ;AACI,gBAAKC,QAAL,CAAc;AACVE,YAAAA,QAAQ,EAAEH;AADA,WAAd;;AAGA;;AACJ;AACI;AAZR;AAcC,KAzBS;;AAAA,UA4BdI,UA5Bc,GA4BH,YAAK;AACZ,UAAGR,UAAU,CAAC,MAAKS,KAAL,CAAWH,QAAZ,EAAqB,MAAKG,KAAL,CAAWF,QAAhC,CAAb,EAAuD;AACnD,cAAKF,QAAL,CAAc;AACVK,UAAAA,QAAQ,EAAE;AADA,SAAd;;AAGA,cAAKC,KAAL,CAAWC,MAAX,CAAkB,UAAlB,EAA6B,MAAKH,KAAL,CAAWH,QAAxC;AACH,OALD,MAMK,CACD;AACH;AACJ,KAtCa;;AAAA,UAwCdO,OAxCc,GAwCN,YAAK;AACT,YAAKR,QAAL,CAAc;AACVK,QAAAA,QAAQ,EAAE;AADA,OAAd;AAGH,KA5Ca;;AAGV,UAAKD,KAAL,GAAW;AACXH,MAAAA,QAAQ,EAAC,EADE;AAEXC,MAAAA,QAAQ,EAAC,EAFE;AAGXO,MAAAA,SAAS,EAAE,UAHA;AAIXJ,MAAAA,QAAQ,EAAE;AAJC,KAAX;AAHU;AAQb,G,CACD;;;;;6BAyES;AACL,aACI;AAAK,QAAA,SAAS,EAAE,SAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CADJ,EAEK,KAAKK,aAFV,EAGK,KAAKC,aAHV,EAIK,KAAKC,YAJV,EAKK,KAAKC,WALV,CADJ;AASH;;;AA/CD;wBACkB;AACd,UAAG,KAAKT,KAAL,CAAWC,QAAd,EAAuB;AACnB,eACI;AAAQ,UAAA,SAAS,EAAC,QAAlB;AAA2B,UAAA,OAAO,EAAE,KAAKG,OAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH;;AACD,aAAO,IAAP;AACH,K,CACD;;;;wBACiB;AACb,UAAG,CAAC,KAAKJ,KAAL,CAAWC,QAAf,EAAwB;AACpB,eACI;AAAQ,UAAA,SAAS,EAAC,cAAlB;AAAiC,UAAA,OAAO,EAAE,KAAKF,UAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ;AAGH;;AACD,aAAO,IAAP;AACH,K,CACD;;;;wBACoB;AAChB,UAAG,CAAC,KAAKC,KAAL,CAAWC,QAAf,EAAwB;AACxB,eACI,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAE,cAAlB;AAAkC,UAAA,EAAE,EAAE,UAAtC;AAAkD,UAAA,YAAY,EAAE,KAAKR,YAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGC;;AACD,aAAO,IAAP;AACH,K,CACD;;;;wBACoB;AAChB,UAAG,CAAC,KAAKO,KAAL,CAAWC,QAAf,EAAwB;AACpB,eACI,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAE,UAAlB;AAA8B,UAAA,EAAE,EAAE,UAAlC;AAA8C,UAAA,YAAY,EAAE,KAAKR,YAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH;;AACD,aAAO,IAAP;AACH;;;;EAjFeJ,KAAK,CAACqB,S;;AA+F1B,eAAelB,KAAf","sourcesContent":["import React from 'react';\r\nimport LoginView from './LoginView';\r\nimport './TextInputStyle.css';\r\nimport { checkLogin } from \"../AccountPage/TestAccounts\";\r\n\r\nclass Login extends React.Component {\r\n    constructor() {\r\n        super()\r\n        //Default values\r\n        this.state={\r\n        username:\"\",\r\n        password:\"\", \r\n        textValue: 'Logga in',\r\n        loggedIn: false} \r\n    }\r\n    //Sets the user name and password to the field values\r\n    handleChange=(id,value)=>{\r\n        switch (id){\r\n            case\"username\":\r\n                this.setState({\r\n                    username: value\r\n                })\r\n                break;\r\n            case\"password\":\r\n                this.setState({\r\n                    password: value\r\n                })\r\n                break;\r\n            default:\r\n                break;\r\n            }\r\n        }\r\n\r\n    //Sets the user to logged in or gives you an alert if your credentials are not correct\r\n    tryToLogin=()=> {\r\n        if(checkLogin(this.state.username,this.state.password)){\r\n            this.setState({\r\n                loggedIn: true\r\n            })\r\n            this.props.search(\"producer\",this.state.username)\r\n        }\r\n        else {\r\n            //alert(\"Användarnamn eller lösenord är fel\")\r\n        }\r\n    }\r\n    //Logs the user out of the system\r\n    loggOut=()=> {\r\n        this.setState({\r\n            loggedIn: false\r\n        })\r\n    }\r\n    //Renders the logout button if the user is logged in\r\n    get logoutButton(){\r\n        if(this.state.loggedIn){\r\n            return(\r\n                <button className=\"button\" onClick={this.loggOut}>Logga ut</button>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n    //Renders the login button if the user is logged out\r\n    get loginButton(){\r\n        if(!this.state.loggedIn){\r\n            return(\r\n                <button className=\"SignInButton\" onClick={this.tryToLogin}>Logga in</button>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n    //Renders the username field if the user is logged out\r\n    get usernameField() {\r\n        if(!this.state.loggedIn){\r\n        return(\r\n            <LoginView label={\"Användarnamn\"} id={\"username\"} handleChange={this.handleChange}/>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n    //Renders the password field if the user is logged out\r\n    get passwordField() {\r\n        if(!this.state.loggedIn){\r\n            return(\r\n                <LoginView label={\"Lösenord\"} id={\"password\"} handleChange={this.handleChange}/>\r\n            )\r\n        }\r\n        return null;\r\n    }\r\n    \r\n    render() { \r\n        return (\r\n            <div className={\"LeftBox\"}>\r\n                <h3>Fyll i dina användaruppgifter!</h3>\r\n                {this.usernameField}\r\n                {this.passwordField}\r\n                {this.logoutButton}\r\n                {this.loginButton}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Login"]},"metadata":{},"sourceType":"module"}